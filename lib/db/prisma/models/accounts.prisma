model Account {
  id                     String    @id @default(ulid())
  customerId             String // The unique identifier for the customer that owns this account
  isExternal             Boolean?  @default(false)
  externalConnectionId   String?
  externalConnectionName String?
  balance                Float
  currencyCode           String?   @default("USD")
  currencyName           String?   @default("US Dollar")
  currencySymbol         String?   @default("$")
  currencyNumericCode    Float?    @default(840)
  displayName            String?
  name                   String
  number                 String
  openedDate             DateTime
  closedDate             DateTime?
  routingNumber          String
  type                   String
  subType                String? // e.g., "checking", "savings", "credit card", "loan", "investment"
  status                 String?   @default("active") // e.g., "active", "closed", "suspended"

  // Loan-specific fields (nullable for non-loan accounts)
  balanceDue        Float?
  currentPrincipal  Float?
  dueDate           DateTime?
  interestRate      Float?
  lastPaymentDate   DateTime?
  nextPaymentDate   DateTime?
  originalPrincipal Float?
  paymentAmount     Float?
  paymentDate       Int? // Day of month (1-31)
  term              Int? // Months

  // Credit-specific fields (nullable for non-credit accounts)
  cardNumber           String?
  creditLimit          Float?
  minimumPaymentAmount Float?
  statementBalance     Float?

  // Deposit/Investment-specific fields (nullable for other accounts)
  availableBalance Float?
  dividendRate     Float?
  interestYTD      Float?
  cashBalance      Float? // Investment accounts only

  // Relations
  transactions Transaction[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([type])
  @@index([status])
  @@index([number])
  @@index([customerId])
  @@index([externalConnectionId])
}

model Transfer {
  id                  String   @id @default(ulid())
  customerId          String
  fromAccountId       String
  toAccountId         String
  description         String
  memo                String?
  amount              Float
  currencyCode        String?  @default("USD")
  currencyName        String?  @default("US Dollar")
  currencySymbol      String?  @default("$")
  currencyNumericCode Float?   @default(840)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@index([fromAccountId])
  @@index([toAccountId])
}

model SampleAccount {
  id                  String    @id @default(ulid())
  customerId          String // The unique identifier for the customer that owns this account
  balance             Float
  currencyCode        String?   @default("USD")
  currencyName        String?   @default("US Dollar")
  currencySymbol      String?   @default("$")
  currencyNumericCode Float?    @default(840)
  displayName         String?
  name                String
  number              String
  openedDate          DateTime
  closedDate          DateTime?
  routingNumber       String
  type                String
  subType             String? // e.g., "checking", "savings", "credit card", "loan", "investment"
  status              String?   @default("active") // e.g., "active", "closed", "suspended"

  // Loan-specific fields (nullable for non-loan accounts)
  balanceDue        Float?
  currentPrincipal  Float?
  dueDate           DateTime?
  interestRate      Float?
  lastPaymentDate   DateTime?
  nextPaymentDate   DateTime?
  originalPrincipal Float?
  paymentAmount     Float?
  paymentDate       Int? // Day of month (1-31)
  term              Int? // Months

  // Credit-specific fields (nullable for non-credit accounts)
  cardNumber           String?
  creditLimit          Float?
  minimumPaymentAmount Float?
  statementBalance     Float?

  // Deposit/Investment-specific fields (nullable for other accounts)
  availableBalance Float?
  dividendRate     Float?
  interestYTD      Float?
  cashBalance      Float? // Investment accounts only

  // Relations
  transactions SampleTransaction[]

  createdAt    DateTime  @default(now())
  lastSyncedAt DateTime?
  expiresAt    DateTime?

  @@index([customerId])
}
